#!/usr/bin/env ruby

# start nodes
def docker_start num=5
  i = 0
  num = 1 if num <= 0
  while i < num.to_i  do
   puts( "Start chef-client runtime #{i}" )
   system "docker run -d -v $(pwd)/shared:/shared --name chef-client-#{i} chef-client"
   i +=1
  end
end

# clean function
def docker_clean
  puts "stop all chef clients"
  system "docker kill $(docker ps -a -q -f 'name=chef-client')"

  puts "delete all chef-client container images"
  system "docker rm $(docker ps -a -q -f 'name=chef-client')"
end

# start virtual machines
def start_vms
  puts "Start Chef server ..."
  system "vagrant up server"
  puts "Start Chef analytics ..."
  system "vagrant up analytics"
  puts "Build Chef client image ..."
  system "docker build -t chef-client ./client"
end

# print help
def print_help
  puts "
#{$0}
    [prepare]
    Boots VMs and prepares the Docker image

    [start] [<number>]
    Starts a given number of containers with chef-client.
    The client automatically registers at the chef server.

    [stop]
    Stops all running chef-clients.
  "
end

args=ARGV.drop(1)
case  ARGV[0]
when 'prepare'
  start_vms
when 'start'
  docker_start ARGV[1].to_i
when 'stop'
  docker_clean
else
  print_help
end
